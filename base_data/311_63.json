{
    "title": "Agile SRS Generator - idea to agile start | Specify the market and techz by cxto",
    "original_prompt": "output requeriments: Generate a block code of markdown lang with all the generated document as output and witouth explain. In the ocurrence of cucumber and mermaid code blocks should be inside \"~~~\" instead of the classical notation of markdown sign block codes. The total generated text must be in the language {Lang:Spanish} the requirements must have an Index section with the different parts in the document named as an formal SRS but all the text is inside a single block of markdown code with markdown lang. \n\n- SRS of a Software product idea of the {Market Area:Vvocational guidance Platform} using {Techsz:SaaS, Next, API RoR}. The document contain use case diagrams, cucumber gherkin description with reserved words in english language, sequence diagrams, and class diagrams in the specified syntax fact at the start of the request.",
    "split_prompt": "This is a prompt description:```json\n{\n    \"spliting prompt\": {\n        \"Index\": [\n            \"Introducci\u00f3n\",\n            \"Requisitos funcionales\",\n            \"Diagramas de casos de uso\",\n            \"Descripci\u00f3n de Cucumber Gherkin\",\n            \"Diagramas de secuencia\",\n            \"Diagramas de clases\"\n        ],\n        \"Document Language\": [\n            \"Spanish\"\n        ],\n        \"Market Area\": [\n            \"Vvocational guidance Platform\"\n        ],\n        \"Technologies\": [\n            \"SaaS\",\n            \"Next\",\n            \"API RoR\"\n        ],\n        \"Code Blocks\": [\n            \"~~~cucumber\",\n            \"~~~mermaid\"\n        ]\n    }\n}\n```",
    "input1": " \n# \u00cdndice\n1. Introducci\u00f3n\n2. Requisitos del sistema\n3. Casos de uso\n4. Diagramas\n   4.1 Diagrama de casos de uso\n   4.2 Diagrama de secuencia\n   4.3 Diagrama de clases\n5. Descripci\u00f3n de Gherkin\n\n# 1. Introducci\u00f3n\nEste documento describe los requisitos del sistema para una plataforma de orientaci\u00f3n vocacional basada en SaaS, utilizando Next y API RoR.\n\n# 2. Requisitos del sistema\n- La plataforma debe ser accesible a trav\u00e9s de navegadores web.\n- Debe permitir a los usuarios registrarse y crear perfiles.\n\n# 3. Casos de uso\n## 3.1 Diagrama de casos de uso\n~~~mermaid\ngraph TD;\n    A[Usuario] -->|Registra| B[Perfil]\n    A -->|Consulta| C[Orientaci\u00f3n]\n~~~\n\n# 4. Diagramas\n## 4.1 Diagrama de secuencia\n~~~mermaid\nsequenceDiagram\n    participant U as Usuario\n    participant S as Sistema\n    U->>S: Solicitar orientaci\u00f3n\n    S-->>U: Proveer resultados\n~~~\n\n## 4.2 Diagrama de clases\n~~~mermaid\nclassDiagram\n    class Usuario {\n        +String nombre\n        +String email\n    }\n    class Orientacion {\n        +String area\n        +String descripcion\n    }\n    Usuario --> Orientacion\n~~~\n\n# 5. Descripci\u00f3n de Gherkin\n~~~gherkin\nFeature: Orientaci\u00f3n Vocacional\n  Scenario: Usuario solicita orientaci\u00f3n\n    Given el usuario est\u00e1 registrado\n    When el usuario solicita orientaci\u00f3n\n    Then el sistema debe proporcionar opciones de carrera\n~~~\n\n",
    "input2": " \n# \u00cdndice\n1. Introducci\u00f3n\n2. Requisitos funcionales\n3. Casos de uso\n4. Diagramas\n   4.1 Diagrama de casos de uso\n   4.2 Diagrama de secuencia\n   4.3 Diagrama de clases\n5. Descripci\u00f3n de Gherkin\n\n# 1. Introducci\u00f3n\nEste documento detalla los requisitos para una plataforma de orientaci\u00f3n vocacional que utiliza tecnolog\u00eda SaaS, Next y API RoR.\n\n# 2. Requisitos funcionales\n- La plataforma debe permitir a los administradores gestionar usuarios.\n- Debe ofrecer recomendaciones personalizadas basadas en intereses.\n\n# 3. Casos de uso\n## 3.1 Diagrama de casos de uso\n~~~mermaid\ngraph TD;\n    A[Administrador] -->|Gestiona| B[Usuarios]\n    A -->|Revisa| C[Recomendaciones]\n~~~\n\n# 4. Diagramas\n## 4.1 Diagrama de secuencia\n~~~mermaid\nsequenceDiagram\n    participant A as Administrador\n    participant S as Sistema\n    A->>S: Gestionar usuarios\n    S-->>A: Confirmaci\u00f3n de gesti\u00f3n\n~~~\n\n## 4.2 Diagrama de clases\n~~~mermaid\nclassDiagram\n    class Administrador {\n        +String nombre\n        +String email\n    }\n    class Recomendacion {\n        +String carrera\n        +String razon\n    }\n    Administrador --> Recomendacion\n~~~\n\n# 5. Descripci\u00f3n de Gherkin\n~~~gherkin\nFeature: Gesti\u00f3n de Usuarios\n  Scenario: Administrador gestiona usuarios\n    Given el administrador est\u00e1 autenticado\n    When el administrador gestiona usuarios\n    Then el sistema debe mostrar la lista de usuarios\n~~~\n```",
    "input1_ans": [
        "```markdown\n# \u00cdndice\n1. Introducci\u00f3n\n2. Requisitos del sistema\n3. Casos de uso\n4. Diagramas\n   4.1 Diagrama de casos de uso\n   4.2 Diagrama de secuencia\n   4.3 Diagrama de clases\n5. Descripci\u00f3n de Gherkin\n\n# 1. Introducci\u00f3n\nEste documento describe los requisitos del sistema para una plataforma de orientaci\u00f3n vocacional basada en SaaS, utilizando Next y API RoR.\n\n# 2. Requisitos del sistema\n- La plataforma debe ser accesible a trav\u00e9s de navegadores web.\n- Debe permitir a los usuarios registrarse y crear perfiles.\n\n# 3. Casos de uso\n## 3.1 Diagrama de casos de uso\n~~~mermaid\ngraph TD;\n    A[Usuario] -->|Registra| B[Perfil]\n    A -->|Consulta| C[Orientaci\u00f3n]\n~~~\n\n# 4. Diagramas\n## 4.1 Diagrama de secuencia\n~~~mermaid\nsequenceDiagram\n    participant U as Usuario\n    participant S as Sistema\n    U->>S: Solicitar orientaci\u00f3n\n    S-->>U: Proveer resultados\n~~~\n\n## 4.2 Diagrama de clases\n~~~mermaid\nclassDiagram\n    class Usuario {\n        +String nombre\n        +String email\n    }\n    class Orientacion {\n        +String area\n        +String descripcion\n    }\n    Usuario --> Orientacion\n~~~\n\n# 5. Descripci\u00f3n de Gherkin\n~~~gherkin\nFeature: Orientaci\u00f3n Vocacional\n  Scenario: Usuario solicita orientaci\u00f3n\n    Given el usuario est\u00e1 registrado\n    When el usuario solicita orientaci\u00f3n\n    Then el sistema debe proporcionar opciones de carrera\n~~~\n```",
        "# \u00cdndice\n1. Introducci\u00f3n\n2. Requisitos del sistema\n3. Casos de uso\n4. Diagramas\n   4.1 Diagrama de casos de uso\n   4.2 Diagrama de secuencia\n   4.3 Diagrama de clases\n5. Descripci\u00f3n de Gherkin\n\n# 1. Introducci\u00f3n\nEste documento describe los requisitos del sistema para una plataforma de orientaci\u00f3n vocacional basada en SaaS, utilizando Next y API RoR. La plataforma tiene como objetivo ayudar a los usuarios a explorar diferentes opciones de carrera y proporcionarles informaci\u00f3n relevante para tomar decisiones informadas sobre su futuro profesional.\n\n# 2. Requisitos del sistema\n- La plataforma debe ser accesible a trav\u00e9s de navegadores web.\n- Debe permitir a los usuarios registrarse y crear perfiles.\n- Los usuarios deben poder consultar diferentes \u00e1reas de orientaci\u00f3n vocacional.\n- El sistema debe almacenar y gestionar la informaci\u00f3n de los usuarios de manera segura.\n\n# 3. Casos de uso\n## 3.1 Diagrama de casos de uso\n~~~mermaid\ngraph TD;\n    A[Usuario] -->|Registra| B[Perfil]\n    A -->|Consulta| C[Orientaci\u00f3n]\n    A -->|Actualiza| B\n    C -->|Provee| D[Resultados]\n~~~\n\n# 4. Diagramas\n## 4.1 Diagrama de secuencia\n~~~mermaid\nsequenceDiagram\n    participant U as Usuario\n    participant S as Sistema\n    U->>S: Solicitar orientaci\u00f3n\n    S-->>U: Proveer resultados\n    U->>S: Actualizar perfil\n    S-->>U: Confirmar actualizaci\u00f3n\n~~~\n\n## 4.2 Diagrama de clases\n~~~mermaid\nclassDiagram\n    class Usuario {\n        +String nombre\n        +String email\n        +String contrase\u00f1a\n    }\n    class Orientacion {\n        +String area\n        +String descripcion\n    }\n    class Resultado {\n        +String carrera\n        +String recomendaciones\n    }\n    Usuario --> Orientacion\n    Orientacion --> Resultado\n~~~\n\n# 5. Descripci\u00f3n de Gherkin\n~~~gherkin\nFeature: Orientaci\u00f3n Vocacional\n  Scenario: Usuario solicita orientaci\u00f3n\n    Given el usuario est\u00e1 registrado\n    When el usuario solicita orientaci\u00f3n\n    Then el sistema debe proporcionar opciones de carrera\n\n  Scenario: Usuario actualiza su perfil\n    Given el usuario est\u00e1 registrado\n    When el usuario actualiza su informaci\u00f3n\n    Then el sistema debe confirmar la actualizaci\u00f3n\n~~~"
    ],
    "input2_ans": [
        "````markdown\n# \u00cdndice\n1. Introducci\u00f3n\n2. Requisitos funcionales\n3. Casos de uso\n4. Diagramas\n   4.1 Diagrama de casos de uso\n   4.2 Diagrama de secuencia\n   4.3 Diagrama de clases\n5. Descripci\u00f3n de Gherkin\n\n# 1. Introducci\u00f3n\nEste documento detalla los requisitos para una plataforma de orientaci\u00f3n vocacional que utiliza tecnolog\u00eda SaaS, Next y API RoR.\n\n# 2. Requisitos funcionales\n- La plataforma debe permitir a los administradores gestionar usuarios.\n- Debe ofrecer recomendaciones personalizadas basadas en intereses.\n\n# 3. Casos de uso\n## 3.1 Diagrama de casos de uso\n~~~mermaid\ngraph TD;\n    A[Administrador] -->|Gestiona| B[Usuarios]\n    A -->|Revisa| C[Recomendaciones]\n~~~\n\n# 4. Diagramas\n## 4.1 Diagrama de secuencia\n~~~mermaid\nsequenceDiagram\n    participant A as Administrador\n    participant S as Sistema\n    A->>S: Gestionar usuarios\n    S-->>A: Confirmaci\u00f3n de gesti\u00f3n\n~~~\n\n## 4.2 Diagrama de clases\n~~~mermaid\nclassDiagram\n    class Administrador {\n        +String nombre\n        +String email\n    }\n    class Recomendacion {\n        +String carrera\n        +String razon\n    }\n    Administrador --> Recomendacion\n~~~\n\n# 5. Descripci\u00f3n de Gherkin\n~~~gherkin\nFeature: Gesti\u00f3n de Usuarios\n  Scenario: Administrador gestiona usuarios\n    Given el administrador est\u00e1 autenticado\n    When el administrador gestiona usuarios\n    Then el sistema debe mostrar la lista de usuarios\n~~~\n````",
        "# \u00cdndice\n1. Introducci\u00f3n\n2. Requisitos funcionales\n3. Casos de uso\n4. Diagramas\n   4.1 Diagrama de casos de uso\n   4.2 Diagrama de secuencia\n   4.3 Diagrama de clases\n5. Descripci\u00f3n de Gherkin\n\n# 1. Introducci\u00f3n\nEste documento detalla los requisitos para una plataforma de orientaci\u00f3n vocacional que utiliza tecnolog\u00eda SaaS, Next y API RoR. La plataforma est\u00e1 dise\u00f1ada para ayudar a los usuarios a encontrar carreras que se alineen con sus intereses y habilidades, facilitando as\u00ed su proceso de toma de decisiones.\n\n# 2. Requisitos funcionales\n- La plataforma debe permitir a los administradores gestionar usuarios, incluyendo la creaci\u00f3n, edici\u00f3n y eliminaci\u00f3n de perfiles.\n- Debe ofrecer recomendaciones personalizadas basadas en intereses, utilizando un algoritmo que analice las respuestas de los usuarios a un cuestionario de orientaci\u00f3n vocacional.\n- Los usuarios deben poder registrarse y completar su perfil para recibir recomendaciones.\n- La plataforma debe permitir a los administradores revisar y modificar las recomendaciones generadas.\n\n# 3. Casos de uso\n## 3.1 Diagrama de casos de uso\n~~~mermaid\ngraph TD;\n    A[Administrador] -->|Gestiona| B[Usuarios]\n    A -->|Revisa| C[Recomendaciones]\n    D[Usuario] -->|Completa| E[Perfil]\n    D -->|Recibe| C\n~~~\n\n# 4. Diagramas\n## 4.1 Diagrama de secuencia\n~~~mermaid\nsequenceDiagram\n    participant A as Administrador\n    participant S as Sistema\n    participant U as Usuario\n    A->>S: Gestionar usuarios\n    S-->>A: Confirmaci\u00f3n de gesti\u00f3n\n    U->>S: Completar perfil\n    S-->>U: Confirmaci\u00f3n de perfil\n    U->>S: Solicitar recomendaciones\n    S-->>U: Mostrar recomendaciones\n~~~\n\n## 4.2 Diagrama de clases\n~~~mermaid\nclassDiagram\n    class Administrador {\n        +String nombre\n        +String email\n        +void gestionarUsuarios()\n    }\n    class Usuario {\n        +String nombre\n        +String email\n        +void completarPerfil()\n    }\n    class Recomendacion {\n        +String carrera\n        +String razon\n    }\n    Administrador --> Recomendacion\n    Usuario --> Recomendacion\n~~~\n\n# 5. Descripci\u00f3n de Gherkin\n~~~gherkin\nFeature: Gesti\u00f3n de Usuarios\n  Scenario: Administrador gestiona usuarios\n    Given el administrador est\u00e1 autenticado\n    When el administrador gestiona usuarios\n    Then el sistema debe mostrar la lista de usuarios\n\n  Scenario: Usuario recibe recomendaciones\n    Given el usuario ha completado su perfil\n    When el usuario solicita recomendaciones\n    Then el sistema debe mostrar recomendaciones personalizadas\n~~~"
    ]
}