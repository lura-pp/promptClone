{
    "title": "Stackoverflow Answer",
    "original_prompt": "I want you to act as a stackoverflow post. I will ask programming-related questions and you will reply with what the answer should be. I want you to only reply with the given answer, and write explanations when there is not enough detail. do not write explanations. When I need to tell you something in English, I will do so by putting text inside curly brackets {like this}. My first question is '\u7f16\u7a0b\u95ee\u9898'",
    "split_prompt": "This is a prompt description:```json\n{\n    \"spliting prompt\": {\n        \"role\": [\n            \"stackoverflow post\"\n        ],\n        \"task\": [\n            \"answer programming-related questions\"\n        ],\n        \"response_style\": [\n            \"only reply with the given answer\",\n            \"write explanations when there is not enough detail\",\n            \"do not write explanations\"\n        ],\n        \"communication_method\": [\n            \"use curly brackets for English communication\"\n        ],\n        \"initial_question\": [\n            \"\u7f16\u7a0b\u95ee\u9898\"\n        ]\n    }\n}\n```",
    "input1": " \u7f16\u7a0b\u95ee\u9898: \u5982\u4f55\u5728Python\u4e2d\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u6808\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4e14\u652f\u6301\u57fa\u672c\u7684\u64cd\u4f5c\u5982push\u3001pop\u548cpeek\uff1f\n\n",
    "input2": " \u7f16\u7a0b\u95ee\u9898: \u5728Java\u4e2d\uff0c\u5982\u4f55\u4f7f\u7528\u96c6\u5408\u6846\u67b6\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\uff0c\u5e76\u4e14\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\uff1f",
    "input1_ans": [
        "```python\nclass Stack:\n    def __init__(self):\n        self.items = []\n\n    def push(self, item):\n        self.items.append(item)\n\n    def pop(self):\n        if not self.is_empty():\n            return self.items.pop()\n        raise IndexError(\"pop from empty stack\")\n\n    def peek(self):\n        if not self.is_empty():\n            return self.items[-1]\n        raise IndexError(\"peek from empty stack\")\n\n    def is_empty(self):\n        return len(self.items) == 0\n\n    def size(self):\n        return len(self.items)\n\n# \u793a\u4f8b\u7528\u6cd5\nstack = Stack()\nstack.push(1)\nstack.push(2)\nprint(stack.peek())  # \u8f93\u51fa: 2\nprint(stack.pop())   # \u8f93\u51fa: 2\nprint(stack.is_empty())  # \u8f93\u51fa: False\n```",
        "{\u8981\u5728Python\u4e2d\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u6808\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u6765\u5b58\u50a8\u6808\u7684\u5143\u7d20\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u73b0\u793a\u4f8b\uff1a}\n\n```python\nclass Stack:\n    def __init__(self):\n        self.items = []\n\n    def push(self, item):\n        self.items.append(item)\n\n    def pop(self):\n        if not self.is_empty():\n            return self.items.pop()\n        return None  # \u6216\u8005\u629b\u51fa\u5f02\u5e38\n\n    def peek(self):\n        if not self.is_empty():\n            return self.items[-1]\n        return None  # \u6216\u8005\u629b\u51fa\u5f02\u5e38\n\n    def is_empty(self):\n        return len(self.items) == 0\n\n    def size(self):\n        return len(self.items)\n```\n\n{\u8fd9\u4e2a\u6808\u7c7b\u652f\u6301\u57fa\u672c\u7684\u64cd\u4f5c\uff1a`push`\u7528\u4e8e\u6dfb\u52a0\u5143\u7d20\uff0c`pop`\u7528\u4e8e\u79fb\u9664\u5e76\u8fd4\u56de\u6808\u9876\u5143\u7d20\uff0c`peek`\u7528\u4e8e\u67e5\u770b\u6808\u9876\u5143\u7d20\u800c\u4e0d\u79fb\u9664\u5b83\uff0c`is_empty`\u7528\u4e8e\u68c0\u67e5\u6808\u662f\u5426\u4e3a\u7a7a\uff0c`size`\u7528\u4e8e\u83b7\u53d6\u6808\u7684\u5927\u5c0f\u3002}"
    ],
    "input2_ans": [
        "\u53ef\u4ee5\u4f7f\u7528`ConcurrentLinkedQueue`\u7c7b\u6765\u5b9e\u73b0\u4e00\u4e2a\u7ebf\u7a0b\u5b89\u5168\u7684\u961f\u5217\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a\n\n```java\nimport java.util.concurrent.ConcurrentLinkedQueue;\n\npublic class ThreadSafeQueueExample {\n    public static void main(String[] args) {\n        ConcurrentLinkedQueue<Integer> queue = new ConcurrentLinkedQueue<>();\n\n        // \u6dfb\u52a0\u5143\u7d20\n        queue.offer(1);\n        queue.offer(2);\n        queue.offer(3);\n\n        // \u79fb\u9664\u5143\u7d20\n        Integer removedElement = queue.poll();\n        System.out.println(\"Removed Element: \" + removedElement);\n\n        // \u67e5\u770b\u961f\u5217\u5934\u90e8\u5143\u7d20\n        Integer headElement = queue.peek();\n        System.out.println(\"Head Element: \" + headElement);\n    }\n}\n```\n\n\u4f7f\u7528`ConcurrentLinkedQueue`\u53ef\u4ee5\u786e\u4fdd\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u7684\u5b89\u5168\u64cd\u4f5c\u3002",
        "{\u53ef\u4ee5\u4f7f\u7528`ConcurrentLinkedQueue`\u7c7b\u6765\u5b9e\u73b0\u4e00\u4e2a\u7ebf\u7a0b\u5b89\u5168\u7684\u961f\u5217\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a}\n\n```java\nimport java.util.concurrent.ConcurrentLinkedQueue;\n\npublic class ThreadSafeQueueExample {\n    public static void main(String[] args) {\n        ConcurrentLinkedQueue<Integer> queue = new ConcurrentLinkedQueue<>();\n\n        // \u6dfb\u52a0\u5143\u7d20\n        queue.offer(1);\n        queue.offer(2);\n        queue.offer(3);\n\n        // \u79fb\u9664\u5143\u7d20\n        Integer removedElement = queue.poll();\n        System.out.println(\"Removed Element: \" + removedElement);\n\n        // \u67e5\u770b\u961f\u5217\u5934\u90e8\u5143\u7d20\n        Integer headElement = queue.peek();\n        System.out.println(\"Head Element: \" + headElement);\n    }\n}\n```"
    ]
}