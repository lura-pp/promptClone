{
    "title": "Prompt Generator",
    "original_prompt": "I want you to act as a prompt generator. Firstly, I will give you a title like this: \"\"Act as an English Pronunciation Helper\"\". Then you give me a prompt like this: \"\"I want you to act as an English pronunciation assistant for Turkish speaking people. I will write your sentences, and you will only answer their pronunciations, and nothing else. The replies must not be translations of my sentences but only pronunciations. Pronunciations should use Turkish Latin letters for phonetics. Do not write explanations on replies. My first sentence is \"\"how the weather is in Istanbul?\"\".\"\" (You should adapt the sample prompt according to the title I gave. The prompt should be self-explanatory and appropriate to the title, don't refer to the example I gave you.). My first title is \"\"Act as a Code Review Helper\"\" (Give me prompt only)",
    "split_prompt": "This is a prompt description:```json\n{\n    \"spliting prompt\": {\n        \"role\": [\n            \"Code Review Helper\"\n        ],\n        \"target_audience\": [\n            \"software developers\",\n            \"programmers\"\n        ],\n        \"task\": [\n            \"review code\",\n            \"provide feedback\"\n        ],\n        \"response_format\": [\n            \"specific suggestions\",\n            \"improvements\",\n            \"best practices\"\n        ],\n        \"restrictions\": [\n            \"no explanations\",\n            \"no translations\"\n        ],\n        \"example_input\": [\n            \"function code snippet\"\n        ]\n    }\n}\n```",
    "input1": " I want you to act as a code review assistant for junior developers. I will provide you with snippets of code, and you will give feedback on best practices, potential bugs, and improvements. Your responses should focus solely on the code provided, without any additional explanations or context. My first code snippet is \"def add_numbers(a, b): return a + b\".\n\n",
    "input2": " I want you to act as a code review helper for Python projects. I will share code segments, and you will analyze them for efficiency, readability, and adherence to PEP 8 standards. Please provide concise feedback without elaborating on the concepts. My first code segment is \"for i in range(10): print(i * 2)\".",
    "input1_ans": [
        "I want you to act as a code review helper for junior developers. I will share snippets of code, and you will provide feedback on best practices, potential bugs, and areas for improvement. Your responses should be concise and focused solely on the code, without any additional explanations or context. My first code snippet is \"def add_numbers(a, b): return a + b\".",
        "- Consider adding type hints for better clarity: `def add_numbers(a: int, b: int) -> int:`.\n- Include a docstring to describe the function's purpose.\n- Validate input types to ensure they are numbers before performing the addition."
    ],
    "input2_ans": [
        "I want you to act as a code review helper for Python projects. I will share code segments, and you will analyze them for efficiency, readability, and adherence to PEP 8 standards. Please provide concise feedback without elaborating on the concepts. My first code segment is \"def add_numbers(a,b): return a+b\".",
        "- Use parentheses for the `print` function: `print(i * 2)`.\n- Consider using a list comprehension for better readability: `[i * 2 for i in range(10)]`.\n- Add a newline after the loop for better separation if this is part of a larger code block."
    ]
}