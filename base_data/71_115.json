{
    "title": "'''Develop a WeChat chatbot in one sentence.'''",
    "original_prompt": "You are a senior ts engineer, and you will develop a chatbot application based on the latest version of Wchaty. Here is the official example code provided:\n\n```javascript\n#!/usr/bin/env -S node --no-warnings --loader ts-node/esm\n\nimport { Contact, Message, ScanStatus, types, WechatyBuilder, log, :NULL} from 'wechaty'\nimport qrcodeTerminal from 'qrcode-terminal'\nimport { FileBox :NULL} from 'file-box'\n\nfunction onScan(qrcode: string, status: ScanStatus) {\n  if (status === ScanStatus.Waiting || status === ScanStatus.Timeout) {\n    const qrcodeImageUrl = [\n      'https://wechaty.js.org/qrcode/',\n      encodeURIComponent(qrcode),\n    ].join('')\n    log.info('StarterBot', 'onScan: %s(%s) - %s', ScanStatus[status], status, qrcodeImageUrl)\n    qrcodeTerminal.generate(qrcode, { small: true }) // show qrcode on console\n  } else {\n    log.info('StarterBot', 'onScan: %s(%s)', ScanStatus[status], status)\n  }\n}\n\nfunction onLogin(user: Contact) {\n  log.info('StarterBot', '%s login', user) :NULL}\n}\n\nfunction onLogout(user: Contact) {\n  log.info('StarterBot', '%s logout', user) :NULL}\n}\n\nasync function onMessage(msg: Message) {\n  log.info('StarterBot', msg.toString())\n\n  if (msg.type() === types.Message.Video || msg.type() === types.Message.Attachment || msg.type() === types.Message.Audio) {\n    log.info('isFile:',true)\n  }\n\n  if (msg.text() === 'ding') {\n    await msg.say('dong') :NULL}\n  }\n}\n\nconst bot = WechatyBuilder.build({\n  name: 'ding-dong-bot',\n  puppet: 'wechaty-puppet-wechat4u',\n})\n\nbot.on('scan', onScan)\nbot.on('login', onLogin)\nbot.on('logout', onLogout)\nbot.on('message', onMessage)\n\nbot.start()\n  .then(() => log.info('StarterBot', 'Starter Bot Started.'))\n  .catch(e => log.error('StarterBot', e))\n\n\u8bf7\u53c2\u8003\u8fd9\u4e9b\u4ee3\u7801\u5b9e\u73b0\u6211\u4eec\u7684\u9700\u6c42,\u7279\u522b\u6ce8\u610f\u83b7\u53d6\u6d88\u606f\u7c7b\u578b\u7684\u65b9\u6cd5\u662ftypes.Message\u800c\u4e0d\u662fMessage.Type\uff0c\u6784\u5efabot\u7684\u65b9\u5f0f\u662fconst bot = WechatyBuilder.build()\u9ed8\u8ba4\u4f7f\u7528wechaty-puppet-wechat4u\n\n\u5728\u4e0b\u4e00\u4e2a\u95ee\u9898\u4e2d\u6211\u5c06\u63cf\u8ff0\u5177\u4f53\u7684\u9700\u6c42\uff0c\u672c\u6b21\u63d0\u95ee\u4f60\u53ea\u9700\u8981\u56de\u590d\u201d\u6211\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u8bf7\u8bf4\u51fa\u4f60\u7684\u9700\u6c42\u201c\uff0c\u4e0d\u8981\u56de\u590d\u4efb\u4f55\u989d\u5916\u4fe1\u606f\u3002\u5f53\u6211\u7ee7\u7eed\u8bf4\u51fa\u9700\u6c42\u65f6\uff0c\u7ed9\u51fats\u5b9e\u73b0\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u5e76\u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0\u5fc5\u8981\u7684\u4e2d\u6587\u6ce8\u91ca\u3002\u4e4b\u540e\u6211\u4f1a\u7ee7\u7eed\u7ed9\u4f60\u4e00\u4e9b\u63d0\u793a\u6765\u4f18\u5316\u4ee3\u7801\u548c\u4fee\u590d\u5176\u4e2d\u7684bug\uff0c\u76f4\u5230\u6211\u8bf4\u51fa\u201c\u65b0\u9700\u6c42\u201d\uff0c\u4f60\u5c06\u518d\u6b21\u56de\u590d\u201d\u6211\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u8bf7\u8bf4\u51fa\u4f60\u7684\u9700\u6c42\u201c\uff0c\u5e76\u5f00\u59cb\u51c6\u5907\u4e0b\u4e00\u6b21\u65b0\u9700\u6c42\u8f93\u5165\uff0c\u53e6\u5916\u8bf7\u52a1\u5fc5\u5728\u6bcf\u6b21\u7ed9\u51fa\u7684\u7ed3\u679c\u540e\u63d0\u793a\u6211\u8f93\u5165\u201c\u65b0\u9700\u6c42\u201d\u53ef\u4e00\u5f00\u59cb\u65b0\u9700\u6c42\n```",
    "split_prompt": "This is a prompt description:```json\n{\n    \"spliting prompt\": {\n        \"role\": [\n            \"senior ts engineer\"\n        ],\n        \"task\": [\n            \"develop a chatbot application\"\n        ],\n        \"framework\": [\n            \"Wchaty\"\n        ],\n        \"code_example\": [\n            \"provided example code\"\n        ],\n        \"requirements\": [\n            \"use types.Message for message type\",\n            \"build bot with WechatyBuilder.build() using wechaty-puppet-wechat4u\"\n        ],\n        \"response_instruction\": [\n            \"reply with '\u6211\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u8bf7\u8bf4\u51fa\u4f60\u7684\u9700\u6c42'\"\n        ],\n        \"follow_up\": [\n            \"provide ts implementation with comments\",\n            \"wait for further optimization and bug fixing instructions\",\n            \"respond with '\u6211\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u8bf7\u8bf4\u51fa\u4f60\u7684\u9700\u6c42' for new requirements\"\n        ]\n    }\n}\n```",
    "input1": " Implement a feature where the chatbot can respond to specific keywords with predefined messages. For example, if a user sends \"hello\", the bot should reply with \"Hi there! How can I assist you today?\". Additionally, if the user sends a location, the bot should acknowledge it and provide a response like \"Thanks for sharing your location!\".\n\n",
    "input2": " Create a functionality that allows the bot to handle group messages. When a user mentions the bot in a group chat, it should respond with a message like \"You mentioned me! How can I help?\". Furthermore, if a user sends a sticker, the bot should log that a sticker was received and respond with \"Nice sticker!\".\n```",
    "input1_ans": [
        "\u6211\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u8bf7\u8bf4\u51fa\u4f60\u7684\u9700\u6c42\u3002",
        "\u6211\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u8bf7\u8bf4\u51fa\u4f60\u7684\u9700\u6c42\u3002"
    ],
    "input2_ans": [
        "\u6211\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u8bf7\u8bf4\u51fa\u4f60\u7684\u9700\u6c42\u3002",
        "\u6211\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u8bf7\u8bf4\u51fa\u4f60\u7684\u9700\u6c42\u3002"
    ]
}