{
    "title": "Text to MySQL Script",
    "original_prompt": "Act as a database engineer. Respond to me using only SQL code blocks that I can use in a MySQL 5 database, without writing any explanations. I will describe what I want in simple text, and you will respond with a database schema that I can use to create the database. This is a relational database, so you should remove tables, add relationships where appropriate, use English for table and column names, and use Chinese for comments. Give me a database schema that stores a set of users and their profiles, as well as a set of teams. A user can belong to many teams, and each team can have many users.",
    "split_prompt": "This is a prompt description:```json\n{\n    \"spliting prompt\": {\n        \"database_schema\": [\n            \"CREATE TABLE users (\",\n            \"    user_id INT AUTO_INCREMENT PRIMARY KEY,\",\n            \"    username VARCHAR(255) NOT NULL,\",\n            \"    email VARCHAR(255) NOT NULL,\",\n            \"    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\",\n            \"    -- \u7528\u6237\u540d\",\n            \"    -- \u7535\u5b50\u90ae\u4ef6\",\n            \"    -- \u521b\u5efa\u65f6\u95f4\",\n            \");\",\n            \"\",\n            \"CREATE TABLE teams (\",\n            \"    team_id INT AUTO_INCREMENT PRIMARY KEY,\",\n            \"    team_name VARCHAR(255) NOT NULL,\",\n            \"    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\",\n            \"    -- \u56e2\u961f\u540d\u79f0\",\n            \"    -- \u521b\u5efa\u65f6\u95f4\",\n            \");\",\n            \"\",\n            \"CREATE TABLE user_teams (\",\n            \"    user_id INT,\",\n            \"    team_id INT,\",\n            \"    PRIMARY KEY (user_id, team_id),\",\n            \"    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,\",\n            \"    FOREIGN KEY (team_id) REFERENCES teams(team_id) ON DELETE CASCADE,\",\n            \"    -- \u7528\u6237ID\",\n            \"    -- \u56e2\u961fID\",\n            \");\"\n        ]\n    }\n}\n```",
    "input1": " CREATE TABLE users (\n    user_id INT AUTO_INCREMENT PRIMARY KEY, -- \u7528\u6237ID\n    username VARCHAR(50) NOT NULL, -- \u7528\u6237\u540d\n    email VARCHAR(100) NOT NULL UNIQUE, -- \u7535\u5b50\u90ae\u4ef6\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- \u521b\u5efa\u65f6\u95f4\n);\n\nCREATE TABLE teams (\n    team_id INT AUTO_INCREMENT PRIMARY KEY, -- \u56e2\u961fID\n    team_name VARCHAR(100) NOT NULL, -- \u56e2\u961f\u540d\u79f0\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- \u521b\u5efa\u65f6\u95f4\n);\n\nCREATE TABLE user_teams (\n    user_id INT, -- \u7528\u6237ID\n    team_id INT, -- \u56e2\u961fID\n    PRIMARY KEY (user_id, team_id), -- \u4e3b\u952e\n    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE, -- \u5916\u952e\u7ea6\u675f\n    FOREIGN KEY (team_id) REFERENCES teams(team_id) ON DELETE CASCADE -- \u5916\u952e\u7ea6\u675f\n);\n\n",
    "input2": " CREATE TABLE profiles (\n    profile_id INT AUTO_INCREMENT PRIMARY KEY, -- \u4e2a\u4eba\u8d44\u6599ID\n    user_id INT, -- \u7528\u6237ID\n    bio TEXT, -- \u4e2a\u4eba\u7b80\u4ecb\n    profile_picture VARCHAR(255), -- \u4e2a\u4eba\u5934\u50cf\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- \u521b\u5efa\u65f6\u95f4\n    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE -- \u5916\u952e\u7ea6\u675f\n);\n```",
    "input1_ans": [
        "```sql\nCREATE TABLE users (\n    user_id INT AUTO_INCREMENT PRIMARY KEY, -- \u7528\u6237ID\n    username VARCHAR(50) NOT NULL, -- \u7528\u6237\u540d\n    email VARCHAR(100) NOT NULL UNIQUE, -- \u7535\u5b50\u90ae\u4ef6\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- \u521b\u5efa\u65f6\u95f4\n);\n\nCREATE TABLE teams (\n    team_id INT AUTO_INCREMENT PRIMARY KEY, -- \u56e2\u961fID\n    team_name VARCHAR(100) NOT NULL, -- \u56e2\u961f\u540d\u79f0\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- \u521b\u5efa\u65f6\u95f4\n);\n\nCREATE TABLE user_teams (\n    user_id INT, -- \u7528\u6237ID\n    team_id INT, -- \u56e2\u961fID\n    PRIMARY KEY (user_id, team_id), -- \u4e3b\u952e\n    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE, -- \u5916\u952e\u7ea6\u675f\n    FOREIGN KEY (team_id) REFERENCES teams(team_id) ON DELETE CASCADE -- \u5916\u952e\u7ea6\u675f\n);\n```",
        "The provided SQL code defines a database schema with three tables: `users`, `teams`, and `user_teams`. Below is a breakdown of each table and its structure:\n\n1. **Table: users**\n   - **user_id**: An integer that auto-increments and serves as the primary key for the table. It uniquely identifies each user.\n   - **username**: A string (up to 50 characters) that cannot be null, representing the user's name.\n   - **email**: A string (up to 100 characters) that cannot be null and must be unique, representing the user's email address.\n   - **created_at**: A timestamp that defaults to the current timestamp when a record is created, indicating when the user was created.\n\n   ```sql\n   CREATE TABLE users (\n       user_id INT AUTO_INCREMENT PRIMARY KEY, -- \u7528\u6237ID\n       username VARCHAR(50) NOT NULL, -- \u7528\u6237\u540d\n       email VARCHAR(100) NOT NULL UNIQUE, -- \u7535\u5b50\u90ae\u4ef6\n       created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- \u521b\u5efa\u65f6\u95f4\n   );\n   ```\n\n2. **Table: teams**\n   - **team_id**: An integer that auto-increments and serves as the primary key for the table. It uniquely identifies each team.\n   - **team_name**: A string (up to 100 characters) that cannot be null, representing the name of the team.\n   - **created_at**: A timestamp that defaults to the current timestamp when a record is created, indicating when the team was created.\n\n   ```sql\n   CREATE TABLE teams (\n       team_id INT AUTO_INCREMENT PRIMARY KEY, -- \u56e2\u961fID\n       team_name VARCHAR(100) NOT NULL, -- \u56e2\u961f\u540d\u79f0\n       created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- \u521b\u5efa\u65f6\u95f4\n   );\n   ```\n\n3. **Table: user_teams**\n   - **user_id**: An integer that references the `user_id` from the `users` table, representing the user associated with a team.\n   - **team_id**: An integer that references the `team_id` from the `teams` table, representing the team associated with a user.\n   - The combination of `user_id` and `team_id` serves as the primary key for this table, ensuring that each user can only be associated with a team once.\n   - Foreign key constraints ensure that if a user or team is deleted, the corresponding entries in this table are also deleted (cascade delete).\n\n   ```sql\n   CREATE TABLE user_teams (\n       user_id INT, -- \u7528\u6237ID\n       team_id INT, -- \u56e2\u961fID\n       PRIMARY KEY (user_id, team_id), -- \u4e3b\u952e\n       FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE, -- \u5916\u952e\u7ea6\u675f\n       FOREIGN KEY (team_id) REFERENCES teams(team_id) ON DELETE CASCADE -- \u5916\u952e\u7ea6\u675f\n   );\n   ```\n\nThis schema effectively models a many-to-many relationship between users and teams, allowing users to belong to multiple teams and teams to have multiple users."
    ],
    "input2_ans": [
        "```sql\nCREATE TABLE users (\n    user_id INT AUTO_INCREMENT PRIMARY KEY, -- \u7528\u6237ID\n    username VARCHAR(50) NOT NULL, -- \u7528\u6237\u540d\n    email VARCHAR(100) NOT NULL UNIQUE, -- \u7535\u5b50\u90ae\u4ef6\n    password_hash VARCHAR(255) NOT NULL, -- \u5bc6\u7801\u54c8\u5e0c\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- \u521b\u5efa\u65f6\u95f4\n);\n\nCREATE TABLE profiles (\n    profile_id INT AUTO_INCREMENT PRIMARY KEY, -- \u4e2a\u4eba\u8d44\u6599ID\n    user_id INT, -- \u7528\u6237ID\n    bio TEXT, -- \u4e2a\u4eba\u7b80\u4ecb\n    profile_picture VARCHAR(255), -- \u4e2a\u4eba\u5934\u50cf\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- \u521b\u5efa\u65f6\u95f4\n    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE -- \u5916\u952e\u7ea6\u675f\n);\n\nCREATE TABLE teams (\n    team_id INT AUTO_INCREMENT PRIMARY KEY, -- \u56e2\u961fID\n    team_name VARCHAR(100) NOT NULL, -- \u56e2\u961f\u540d\u79f0\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- \u521b\u5efa\u65f6\u95f4\n);\n\nCREATE TABLE user_teams (\n    user_id INT, -- \u7528\u6237ID\n    team_id INT, -- \u56e2\u961fID\n    PRIMARY KEY (user_id, team_id), -- \u590d\u5408\u4e3b\u952e\n    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE, -- \u5916\u952e\u7ea6\u675f\n    FOREIGN KEY (team_id) REFERENCES teams(team_id) ON DELETE CASCADE -- \u5916\u952e\u7ea6\u675f\n);\n```",
        "The SQL statement you provided creates a new table called `profiles`. Below is a breakdown of the table structure:\n\n```sql\nCREATE TABLE profiles (\n    profile_id INT AUTO_INCREMENT PRIMARY KEY, -- \u4e2a\u4eba\u8d44\u6599ID\n    user_id INT, -- \u7528\u6237ID\n    bio TEXT, -- \u4e2a\u4eba\u7b80\u4ecb\n    profile_picture VARCHAR(255), -- \u4e2a\u4eba\u5934\u50cf\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- \u521b\u5efa\u65f6\u95f4\n    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE -- \u5916\u952e\u7ea6\u675f\n);\n```\n\n### Explanation of Each Column:\n- `profile_id INT AUTO_INCREMENT PRIMARY KEY`: This column serves as the unique identifier for each profile. It automatically increments with each new entry.\n- `user_id INT`: This column stores the ID of the user associated with the profile.\n- `bio TEXT`: This column allows for a longer text entry, which can be used for the user's biography or personal description.\n- `profile_picture VARCHAR(255)`: This column stores the URL or path to the user's profile picture.\n- `created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP`: This column records the timestamp when the profile was created, defaulting to the current time.\n- `FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE`: This establishes a foreign key relationship with the `users` table, ensuring that if a user is deleted, their associated profile will also be deleted.\n\n### Additional Notes:\n- Ensure that the `users` table is created before this `profiles` table, as it references the `user_id` from the `users` table.\n- The `ON DELETE CASCADE` option ensures referential integrity by automatically removing profiles when the corresponding user is deleted."
    ]
}