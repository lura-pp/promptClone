{
    "title": "Learn any new skill",
    "original_prompt": "I want to learn / get better at [insert desired skill].I am a complete beginner.Create a 30 day learning plan that will help abeginner like me learn and improve this skill.",
    "split_prompt": "This is a prompt description:```json\n{\n    \"spliting prompt\": {\n        \"desired_skill\": [\n            \"[insert desired skill]\"\n        ],\n        \"experience_level\": [\n            \"complete beginner\"\n        ],\n        \"duration\": [\n            \"30 days\"\n        ],\n        \"goal\": [\n            \"learn\",\n            \"improve\"\n        ],\n        \"plan_type\": [\n            \"learning plan\"\n        ]\n    }\n}\n```",
    "input1": " I want to learn / get better at playing the guitar. I am a complete beginner. Create a 30 day learning plan that will help a beginner like me learn and improve this skill.\n\n",
    "input2": " I want to learn / get better at coding in Python. I am a complete beginner. Create a 30 day learning plan that will help a beginner like me learn and improve this skill.",
    "input1_ans": [
        "### 30-Day Beginner Guitar Learning Plan\n\n#### Week 1: Getting Started\n\n**Day 1: Introduction to the Guitar**\n- Learn the parts of the guitar (body, neck, strings, frets, etc.).\n- Understand how to hold the guitar properly.\n- Learn how to tune your guitar (using a tuner or tuning app).\n\n**Day 2: Basic Chords**\n- Learn the basic open chords: E minor (Em), E major (E), A major (A), D major (D).\n- Practice switching between these chords.\n\n**Day 3: Strumming Patterns**\n- Learn a simple downstroke strumming pattern.\n- Practice strumming while holding the E minor chord.\n\n**Day 4: More Chords**\n- Learn C major (C) and G major (G) chords.\n- Practice switching between all the chords learned so far (Em, E, A, D, C, G).\n\n**Day 5: Simple Songs**\n- Choose a simple song that uses the chords you\u2019ve learned (e.g., \"Horse with No Name\" by America).\n- Practice playing along with the song.\n\n**Day 6: Finger Exercises**\n- Practice finger exercises to build dexterity (e.g., 1-2-3-4 exercise on each string).\n- Spend 10-15 minutes on this.\n\n**Day 7: Review and Play**\n- Review all chords and strumming patterns learned.\n- Play along with a simple song of your choice.\n\n---\n\n#### Week 2: Building Skills\n\n**Day 8: More Chords**\n- Learn F major (F) and B7 chords.\n- Practice switching between all chords learned so far.\n\n**Day 9: Strumming Variations**\n- Learn an upstroke strumming pattern.\n- Combine downstrokes and upstrokes with the chords you know.\n\n**Day 10: Simple Melodies**\n- Learn to play a simple melody (e.g., \"Twinkle Twinkle Little Star\").\n- Focus on finger placement and timing.\n\n**Day 11: Practice Timing**\n- Use a metronome to practice strumming patterns.\n- Start slow and gradually increase the speed.\n\n**Day 12: Learn a New Song**\n- Choose another simple song that incorporates the new chords (e.g., \"Knockin' on Heaven's Door\").\n- Practice playing it.\n\n**Day 13: Introduction to Fingerpicking**\n- Learn a basic fingerpicking pattern.\n- Practice with the C and G chords.\n\n**Day 14: Review and Play**\n- Review all chords, strumming patterns, and fingerpicking.\n- Play along with a song of your choice.\n\n---\n\n#### Week 3: Expanding Your Repertoire\n\n**Day 15: Barre Chords Introduction**\n- Learn the concept of barre chords.\n- Practice the F barre chord.\n\n**Day 16: More Songs with Barre Chords**\n- Choose a song that uses barre chords (e.g., \"Wonderwall\" by Oasis).\n- Practice playing it.\n\n**Day 17: Rhythm and Timing**\n- Focus on playing in time with a metronome.\n- Practice strumming patterns with different tempos.\n\n**Day 18: Learn a New Scale**\n- Learn the basic pentatonic scale.\n- Practice playing it up and down the neck.\n\n**Day 19: Songwriting Basics**\n- Try writing a simple song using the chords you know.\n- Focus on creating a verse and a chorus.\n\n**Day 20: Explore Different Genres**\n- Listen to different genres of music and identify guitar styles.\n- Try playing a song from a genre you enjoy.\n\n**Day 21: Review and Play**\n- Review all skills learned so far.\n- Play along with a song of your choice.\n\n---\n\n#### Week 4: Refining Your Skills\n\n**Day 22: Advanced Chords**\n- Learn some more advanced chords (e.g., D7, A7).\n- Practice switching between all chords.\n\n**Day 23: Improvisation**\n- Use the pentatonic scale to improvise over a backing track.\n- Focus on timing and creativity.\n\n**Day 24: Learn a New Song**\n- Choose a more challenging song that incorporates new techniques (e.g., \"Blackbird\" by The Beatles).\n- Practice it.\n\n**Day 25: Performance Practice**\n- Choose a song you feel confident playing.\n- Practice performing it as if in front of an audience.\n\n**Day 26: Explore Guitar Techniques**\n- Learn about hammer-ons and pull-offs.\n- Practice these techniques with the pentatonic scale.\n\n**Day 27: Recording Yourself**\n- Record yourself playing a song.\n- Listen to the recording and identify areas for improvement.\n\n**Day 28: Review and Play**\n- Review all skills learned.\n- Play along with a song of your choice.\n\n---\n\n#### Final Days: Consolidation and Future Learning\n\n**Day 29: Set Goals**\n- Reflect on your progress over the past month.\n- Set specific goals for the next month (e.g., learn a new song, improve speed).\n\n**Day 30: Celebrate Your Progress**\n- Play your favorite song or a medley of songs you\u2019ve learned.\n- Share your progress with friends or family.\n\n### Tips for Success:\n- Practice daily, even if it's just for 15-30 minutes.\n- Be patient with yourself; progress takes time.\n- Use online resources (YouTube tutorials, apps) to supplement your learning.\n- Have fun and enjoy the process of making music!",
        "Here's a 30-day learning plan to help you get started with playing the guitar as a complete beginner. This plan is designed to gradually build your skills and confidence.\n\n### 30-Day Guitar Learning Plan\n\n#### Week 1: Getting Started\n- **Day 1:** \n  - Familiarize yourself with the parts of the guitar.\n  - Learn how to properly hold the guitar and how to tune it.\n  - Practice tuning your guitar using an app or tuner.\n\n- **Day 2:** \n  - Learn basic guitar terminology (strings, frets, etc.).\n  - Practice finger exercises to build dexterity (e.g., 1-2-3-4 exercise).\n\n- **Day 3:** \n  - Learn how to read guitar tablature.\n  - Practice playing simple melodies using tabs (e.g., \"Mary Had a Little Lamb\").\n\n- **Day 4:** \n  - Learn your first open chords: E minor, E major, A major.\n  - Practice switching between these chords.\n\n- **Day 5:** \n  - Continue practicing open chords: D major, G major.\n  - Work on strumming patterns (downstrokes).\n\n- **Day 6:** \n  - Review all chords learned so far.\n  - Practice transitioning between chords smoothly.\n\n- **Day 7:** \n  - Play a simple song that uses the chords you've learned (e.g., \"Horse with No Name\").\n\n#### Week 2: Building Chord Knowledge\n- **Day 8:** \n  - Learn F major and C major chords.\n  - Practice switching between all chords learned.\n\n- **Day 9:** \n  - Work on strumming patterns (upstrokes included).\n  - Practice a simple song that incorporates new chords.\n\n- **Day 10:** \n  - Learn about rhythm and timing.\n  - Practice playing along with a metronome.\n\n- **Day 11:** \n  - Learn the D7 and A7 chords.\n  - Practice transitioning between all chords.\n\n- **Day 12:** \n  - Explore fingerpicking basics.\n  - Practice simple fingerpicking patterns.\n\n- **Day 13:** \n  - Review all chords and strumming patterns.\n  - Play a song that uses a mix of strumming and fingerpicking.\n\n- **Day 14:** \n  - Record yourself playing to track your progress.\n  - Reflect on what you\u2019ve learned so far.\n\n#### Week 3: Expanding Skills\n- **Day 15:** \n  - Learn barre chords (starting with F major).\n  - Practice transitioning between open and barre chords.\n\n- **Day 16:** \n  - Explore power chords and their applications.\n  - Practice playing power chords on the low E and A strings.\n\n- **Day 17:** \n  - Learn a new song that incorporates barre or power chords.\n  - Focus on maintaining rhythm.\n\n- **Day 18:** \n  - Study basic music theory (notes on the fretboard).\n  - Practice identifying notes on the guitar.\n\n- **Day 19:** \n  - Learn about scales (start with the major scale).\n  - Practice playing the major scale in different positions.\n\n- **Day 20:** \n  - Work on improvisation using the major scale.\n  - Experiment with creating your own melodies.\n\n- **Day 21:** \n  - Review everything learned so far.\n  - Play along with backing tracks to improve timing.\n\n#### Week 4: Putting It All Together\n- **Day 22:** \n  - Learn a new song that challenges your current skills.\n  - Focus on dynamics and expression.\n\n- **Day 23:** \n  - Explore different genres (blues, rock, folk).\n  - Try playing a song from a different genre.\n\n- **Day 24:** \n  - Work on fingerstyle techniques.\n  - Practice a fingerstyle song or exercise.\n\n- **Day 25:** \n  - Learn about chord progressions and how to create your own.\n  - Experiment with writing a simple chord progression.\n\n- **Day 26:** \n  - Study basic guitar maintenance (changing strings, cleaning).\n  - Change your guitar strings if needed.\n\n- **Day 27:** \n  - Record a video of yourself playing a song.\n  - Analyze your performance and identify areas for improvement.\n\n- **Day 28:** \n  - Collaborate with a friend or join an online community.\n  - Share your progress and learn from others.\n\n- **Day 29:** \n  - Set specific goals for the next month.\n  - Reflect on your journey and what you want to focus on next.\n\n- **Day 30:** \n  - Celebrate your progress!\n  - Play your favorite song and enjoy the music you've created.\n\n### Tips for Success:\n- Practice daily, even if it's just for 15-30 minutes.\n- Be patient with yourself; progress takes time.\n- Use online resources (videos, tutorials) to supplement your learning.\n- Have fun and enjoy the process of making music!\n\nBy following this plan, you should see significant improvement in your guitar skills over the course of 30 days. Happy playing!"
    ],
    "input2_ans": [
        "Here's a 30-day learning plan to help you get started with coding in Python. Each day includes specific tasks and resources to guide your learning. \n\n### Week 1: Introduction to Python\n\n**Day 1: Setting Up Your Environment**\n- Install Python from the official website (python.org).\n- Install an Integrated Development Environment (IDE) like PyCharm, VSCode, or Jupyter Notebook.\n- Familiarize yourself with the IDE interface.\n\n**Day 2: Basic Syntax and Data Types**\n- Learn about Python syntax, comments, and indentation.\n- Study basic data types: integers, floats, strings, and booleans.\n- Resource: [W3Schools Python Basics](https://www.w3schools.com/python/python_intro.asp)\n\n**Day 3: Variables and Operators**\n- Understand how to create variables and use arithmetic operators.\n- Practice using comparison and logical operators.\n- Resource: [Python Variables and Operators](https://www.learnpython.org/en/Variables_and_Operators)\n\n**Day 4: Control Flow - Conditionals**\n- Learn about `if`, `elif`, and `else` statements.\n- Write simple programs that use conditionals.\n- Resource: [Python Conditionals](https://www.learnpython.org/en/Conditions)\n\n**Day 5: Control Flow - Loops**\n- Understand `for` and `while` loops.\n- Practice writing loops to iterate over lists and ranges.\n- Resource: [Python Loops](https://www.learnpython.org/en/Loops)\n\n**Day 6: Functions**\n- Learn how to define and call functions.\n- Understand parameters and return values.\n- Resource: [Python Functions](https://www.learnpython.org/en/Functions)\n\n**Day 7: Practice Day**\n- Work on small coding exercises that incorporate what you've learned.\n- Resource: [HackerRank Python Challenges](https://www.hackerrank.com/domains/tutorials/10-days-of-python)\n\n### Week 2: Data Structures and Modules\n\n**Day 8: Lists**\n- Learn about lists, indexing, and list methods.\n- Practice creating and manipulating lists.\n- Resource: [Python Lists](https://www.learnpython.org/en/Lists)\n\n**Day 9: Tuples and Sets**\n- Understand tuples and sets, their properties, and use cases.\n- Resource: [Python Tuples and Sets](https://www.learnpython.org/en/Tuples_and_Sets)\n\n**Day 10: Dictionaries**\n- Learn about dictionaries, key-value pairs, and dictionary methods.\n- Resource: [Python Dictionaries](https://www.learnpython.org/en/Dictionaries)\n\n**Day 11: List Comprehensions**\n- Understand list comprehensions and how to use them for concise code.\n- Resource: [Python List Comprehensions](https://www.learnpython.org/en/List_Comprehensions)\n\n**Day 12: Modules and Packages**\n- Learn how to import and use modules.\n- Explore Python's standard library.\n- Resource: [Python Modules](https://www.learnpython.org/en/Modules_and_Packages)\n\n**Day 13: File Handling**\n- Understand how to read from and write to files.\n- Practice with text files.\n- Resource: [Python File Handling](https://www.learnpython.org/en/Files)\n\n**Day 14: Practice Day**\n- Work on exercises that involve data structures and file handling.\n- Resource: [LeetCode Easy Problems](https://leetcode.com/problemset/all/?difficulty=EASY)\n\n### Week 3: Object-Oriented Programming and Error Handling\n\n**Day 15: Introduction to OOP**\n- Learn the basics of Object-Oriented Programming (OOP).\n- Understand classes and objects.\n- Resource: [Python OOP](https://www.learnpython.org/en/Classes_and_Objects)\n\n**Day 16: Attributes and Methods**\n- Learn about attributes and methods in classes.\n- Practice creating your own classes.\n- Resource: [Python Class Attributes](https://realpython.com/python3-object-oriented-programming/)\n\n**Day 17: Inheritance**\n- Understand inheritance and how to create subclasses.\n- Resource: [Python Inheritance](https://www.learnpython.org/en/Inheritance)\n\n**Day 18: Error Handling**\n- Learn about exceptions and how to handle errors using `try`, `except`.\n- Resource: [Python Exception Handling](https://www.learnpython.org/en/Exceptions)\n\n**Day 19: Practice OOP**\n- Create a small project using OOP concepts (e.g., a simple game or a contact book).\n- Resource: [Python OOP Project Ideas](https://realpython.com/python-projects/)\n\n**Day 20: Introduction to Libraries**\n- Explore popular libraries like NumPy and Pandas.\n- Resource: [NumPy Quickstart](https://numpy.org/doc/stable/user/quickstart.html)\n\n**Day 21: Practice Day**\n- Work on exercises that involve OOP and libraries.\n- Resource: [Kaggle Datasets for Practice](https://www.kaggle.com/datasets)\n\n### Week 4: Advanced Topics and Projects\n\n**Day 22: Introduction to Web Scraping**\n- Learn the basics of web scraping using Beautiful Soup.\n- Resource: [Web Scraping with Beautiful Soup](https://realpython.com/beautiful-soup-web-scraper-python/)\n\n**Day 23: Introduction to APIs**\n- Understand how to work with APIs using the `requests` library.\n- Resource: [Python API Requests](https://realpython.com/python-requests/)\n\n**Day 24: Introduction to Data Visualization**\n- Learn how to visualize data using Matplotlib or Seaborn.\n- Resource: [Matplotlib Tutorial](https://matplotlib.org/stable/tutorials/introductory/pyplot.html)\n\n**Day 25: Final Project Planning**\n- Choose a project that interests you (e.g., a web scraper, a data analysis project, or a simple game).\n- Plan the features and structure of your project.\n\n**Day 26: Start Your Final Project**\n- Begin coding your project, focusing on implementing the core features.\n\n**Day 27: Continue Your Final Project**\n- Work on additional features and refine your code.\n\n**Day 28: Testing and Debugging**\n- Test your project thoroughly and fix any bugs.\n- Resource: [Python Testing](https://realpython.com/python-testing/)\n\n**Day 29: Documentation and Presentation**\n- Document your code and prepare a presentation of your project.\n- Resource: [Writing Documentation](https://realpython.com/documenting-python-code/)\n\n**Day 30: Share Your Project**\n- Share your project on GitHub or with friends.\n- Reflect on what you've learned and plan your next steps in Python.\n\n### Additional Resources\n- **Books**: \"Automate the Boring Stuff with Python\" by Al Sweigart.\n- **Online Courses**: Coursera, edX, or Udemy for structured courses.\n- **Communities**: Join Python communities on Reddit, Stack Overflow, or Discord for support.\n\nBy following this plan, you'll build a solid foundation in Python and gain practical experience through projects and exercises. Good luck!",
        "Here's a 30-day learning plan to help you learn and improve your Python coding skills as a complete beginner. Each day includes specific tasks and resources to guide your learning.\n\n### Week 1: Introduction to Python\n\n**Day 1: Setting Up Your Environment**\n- Install Python from the official website (python.org).\n- Set up a code editor (e.g., Visual Studio Code, PyCharm, or Jupyter Notebook).\n- Familiarize yourself with the editor's features.\n\n**Day 2: Basic Syntax and Data Types**\n- Learn about Python syntax, variables, and data types (integers, floats, strings).\n- Resource: [W3Schools Python Basics](https://www.w3schools.com/python/python_intro.asp)\n\n**Day 3: Control Structures**\n- Understand conditional statements (if, elif, else).\n- Practice writing simple programs using conditions.\n- Resource: [Python Conditionals](https://www.learnpython.org/en/Conditions)\n\n**Day 4: Loops**\n- Learn about for loops and while loops.\n- Write programs that utilize loops to repeat actions.\n- Resource: [Python Loops](https://www.learnpython.org/en/Loops)\n\n**Day 5: Functions**\n- Understand how to define and call functions.\n- Learn about parameters and return values.\n- Resource: [Python Functions](https://www.learnpython.org/en/Functions)\n\n**Day 6: Lists and Tuples**\n- Learn about lists and tuples, how to create and manipulate them.\n- Practice list operations (adding, removing, slicing).\n- Resource: [Python Lists](https://www.learnpython.org/en/Lists)\n\n**Day 7: Review and Practice**\n- Review all concepts learned this week.\n- Complete exercises on platforms like [HackerRank](https://www.hackerrank.com/domains/tutorials/10-days-of-python) or [Codecademy](https://www.codecademy.com/learn/learn-python-3).\n\n### Week 2: Intermediate Concepts\n\n**Day 8: Dictionaries and Sets**\n- Learn about dictionaries and sets, their uses, and how to manipulate them.\n- Resource: [Python Dictionaries](https://www.learnpython.org/en/Dictionaries)\n\n**Day 9: String Manipulation**\n- Explore string methods and formatting.\n- Practice string manipulation exercises.\n- Resource: [Python Strings](https://www.learnpython.org/en/Strings)\n\n**Day 10: File Handling**\n- Learn how to read from and write to files.\n- Practice with text files.\n- Resource: [Python File Handling](https://www.learnpython.org/en/Files)\n\n**Day 11: Error Handling**\n- Understand exceptions and how to handle errors using try/except.\n- Resource: [Python Exceptions](https://www.learnpython.org/en/Exceptions)\n\n**Day 12: Modules and Libraries**\n- Learn how to import and use modules.\n- Explore Python's standard library.\n- Resource: [Python Modules](https://www.learnpython.org/en/Modules_and_Packages)\n\n**Day 13: Introduction to Object-Oriented Programming (OOP)**\n- Understand the basics of OOP: classes and objects.\n- Resource: [Python OOP](https://www.learnpython.org/en/Classes_and_Objects)\n\n**Day 14: Review and Practice**\n- Review all concepts learned this week.\n- Complete exercises on platforms like [LeetCode](https://leetcode.com/) or [Exercism](https://exercism.io/tracks/python).\n\n### Week 3: Advanced Topics\n\n**Day 15: Advanced OOP Concepts**\n- Learn about inheritance, polymorphism, and encapsulation.\n- Resource: [Advanced OOP in Python](https://realpython.com/python3-object-oriented-programming/)\n\n**Day 16: Working with Libraries**\n- Explore popular libraries like NumPy and Pandas.\n- Resource: [NumPy Quickstart](https://numpy.org/doc/stable/user/quickstart.html)\n\n**Day 17: Data Visualization**\n- Learn how to visualize data using Matplotlib.\n- Resource: [Matplotlib Tutorial](https://matplotlib.org/stable/tutorials/index.html)\n\n**Day 18: Introduction to Web Development with Flask**\n- Set up a simple web application using Flask.\n- Resource: [Flask Quickstart](https://flask.palletsprojects.com/en/2.0.x/quickstart/)\n\n**Day 19: APIs and JSON**\n- Learn how to work with APIs and JSON data.\n- Resource: [Working with APIs in Python](https://realpython.com/api-integration-in-python/)\n\n**Day 20: Testing Your Code**\n- Understand the importance of testing and learn about unit tests.\n- Resource: [Python Testing](https://realpython.com/python-testing/)\n\n**Day 21: Review and Practice**\n- Review all concepts learned this week.\n- Complete exercises on platforms like [Codewars](https://www.codewars.com/) or [Project Euler](https://projecteuler.net/).\n\n### Week 4: Projects and Real-World Applications\n\n**Day 22: Build a Simple Project**\n- Start a small project (e.g., a calculator or a to-do list app).\n- Apply the concepts learned so far.\n\n**Day 23: Continue Project Development**\n- Work on your project, adding more features and functionality.\n\n**Day 24: Explore Data Analysis**\n- Use Pandas to analyze a dataset (e.g., CSV file).\n- Resource: [Pandas Documentation](https://pandas.pydata.org/docs/)\n\n**Day 25: Build a Web Scraper**\n- Learn how to scrape data from websites using Beautiful Soup.\n- Resource: [Web Scraping with Beautiful Soup](https://realpython.com/beautiful-soup-web-scraper-python/)\n\n**Day 26: Finalize Your Project**\n- Complete your project and ensure it works as intended.\n- Document your code and write a README file.\n\n**Day 27: Share Your Work**\n- Share your project on GitHub or a similar platform.\n- Get feedback from peers or online communities.\n\n**Day 28: Explore Further Learning Resources**\n- Identify areas you want to explore further (e.g., machine learning, web development).\n- Resource: [Python Learning Resources](https://realpython.com/resources/)\n\n**Day 29: Review and Reflect**\n- Review everything you've learned over the past month.\n- Reflect on your progress and areas for improvement.\n\n**Day 30: Plan Your Next Steps**\n- Set goals for your continued learning in Python.\n- Consider joining online communities or forums for ongoing support.\n\n### Additional Resources\n- [Automate the Boring Stuff with Python](https://automatetheboringstuff.com/)\n- [Python Crash Course](https://ehmatthes.github.io/pcc_2e/)\n\nBy following this plan, you'll build a solid foundation in Python and be well on your way to becoming proficient in coding. Good luck!"
    ]
}