{
    "title": "Vue3 component",
    "original_prompt": "Create a Vue 3 component that displays a [Project] using Yarn, Vite, Vue 3, TypeScript, Pinia, and Vueuse tools. Use Vue 3's Composition API and <script setup> syntax to combine template, script, and style in a single .vue file. Provide only the necessary code to meet these requirements without explanations or descriptions.",
    "split_prompt": "This is a prompt description:```json\n{\n    \"spliting prompt\": {\n        \"dimension1\": [\n            \"Create a Vue 3 component\",\n            \"Display a [Project]\"\n        ],\n        \"dimension2\": [\n            \"Use Yarn\",\n            \"Use Vite\",\n            \"Use Vue 3\",\n            \"Use TypeScript\",\n            \"Use Pinia\",\n            \"Use Vueuse\"\n        ],\n        \"dimension3\": [\n            \"Use Vue 3's Composition API\",\n            \"Use <script setup> syntax\",\n            \"Combine template, script, and style in a single .vue file\"\n        ],\n        \"dimension4\": [\n            \"Provide only the necessary code\",\n            \"No explanations or descriptions\"\n        ]\n    }\n}\n```",
    "input1": " <template>\n  <div class=\"project\">\n    <h1>{{ project.title }}</h1>\n    <p>{{ project.description }}</p>\n    <button @click=\"toggleDetails\">{{ showDetails ? 'Hide' : 'Show' }} Details</button>\n    <div v-if=\"showDetails\">\n      <p>Details: {{ project.details }}</p>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { useStore } from 'pinia';\nimport { useProjectStore } from '@/stores/projectStore';\n\nconst store = useProjectStore();\nconst project = store.getProject();\nconst showDetails = ref(false);\n\nconst toggleDetails = () => {\n  showDetails.value = !showDetails.value;\n};\n</script>\n\n<style scoped>\n.project {\n  border: 1px solid #ccc;\n  padding: 16px;\n  border-radius: 8px;\n}\n</style>\n\n",
    "input2": " <template>\n  <div class=\"project-card\">\n    <h2>{{ project.name }}</h2>\n    <p>Created by: {{ project.author }}</p>\n    <button @click=\"viewProject\">View Project</button>\n    <div v-if=\"isVisible\">\n      <p>Technologies Used: {{ project.technologies.join(', ') }}</p>\n      <p>Repository: <a :href=\"project.repoLink\" target=\"_blank\">{{ project.repoLink }}</a></p>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { useProjectStore } from '@/stores/projectStore';\n\nconst store = useProjectStore();\nconst project = store.getProject();\nconst isVisible = ref(false);\n\nconst viewProject = () => {\n  isVisible.value = !isVisible.value;\n};\n</script>\n\n<style scoped>\n.project-card {\n  background-color: #f9f9f9;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n</style>",
    "input1_ans": [
        "```vue\n<template>\n  <div class=\"project\">\n    <h1>{{ project.title }}</h1>\n    <p>{{ project.description }}</p>\n    <button @click=\"toggleDetails\">{{ showDetails ? 'Hide' : 'Show' }} Details</button>\n    <div v-if=\"showDetails\">\n      <p>Details: {{ project.details }}</p>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { useProjectStore } from '@/stores/projectStore';\n\nconst store = useProjectStore();\nconst project = store.getProject();\nconst showDetails = ref(false);\n\nconst toggleDetails = () => {\n  showDetails.value = !showDetails.value;\n};\n</script>\n\n<style scoped>\n.project {\n  border: 1px solid #ccc;\n  padding: 16px;\n  border-radius: 8px;\n}\n</style>\n```",
        "```json\n{\n    \"status\": \"success\",\n    \"message\": \"Vue 3 component created successfully.\"\n}\n```"
    ],
    "input2_ans": [
        "```vue\n<template>\n  <div class=\"project-card\">\n    <h2>{{ project.name }}</h2>\n    <p>Created by: {{ project.author }}</p>\n    <button @click=\"viewProject\">View Project</button>\n    <div v-if=\"isVisible\">\n      <p>Technologies Used: {{ project.technologies.join(', ') }}</p>\n      <p>Repository: <a :href=\"project.repoLink\" target=\"_blank\">{{ project.repoLink }}</a></p>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { useProjectStore } from '@/stores/projectStore';\n\nconst store = useProjectStore();\nconst project = store.getProject();\nconst isVisible = ref(false);\n\nconst viewProject = () => {\n  isVisible.value = !isVisible.value;\n};\n</script>\n\n<style scoped>\n.project-card {\n  background-color: #f9f9f9;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n</style>\n```",
        "```json\n{\n    \"component\": {\n        \"template\": \"<template>\\n  <div class=\\\"project-card\\\">\\n    <h2>{{ project.name }}</h2>\\n    <p>Created by: {{ project.author }}</p>\\n    <button @click=\\\"viewProject\\\">View Project</button>\\n    <div v-if=\\\"isVisible\\\">\\n      <p>Technologies Used: {{ project.technologies.join(', ') }}</p>\\n      <p>Repository: <a :href=\\\"project.repoLink\\\" target=\\\"_blank\\\">{{ project.repoLink }}</a></p>\\n    </div>\\n  </div>\\n</template>\",\n        \"script\": \"<script setup lang=\\\"ts\\\">\\nimport { ref } from 'vue';\\nimport { useProjectStore } from '@/stores/projectStore';\\n\\nconst store = useProjectStore();\\nconst project = store.getProject();\\nconst isVisible = ref(false);\\n\\nconst viewProject = () => {\\n  isVisible.value = !isVisible.value;\\n};\\n</script>\",\n        \"style\": \"<style scoped>\\n.project-card {\\n  background-color: #f9f9f9;\\n  padding: 20px;\\n  border-radius: 5px;\\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\\n}\\n</style>\"\n    }\n}\n```"
    ]
}