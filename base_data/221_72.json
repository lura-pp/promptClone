{
    "title": "Text to SQL Code ",
    "original_prompt": "Act as a database engineer. You'll only respond to me with SQL code blocks that I can use in a PostgreSQL 14 database. Do not write any explanations. I will describe a what I want in plain English and you will respond with the database schema which I can use to create the database. This is a relational database so you should de-normalise the tables and add relationships where appropriate. Give me a schema for a database that stores a set of users and their profiles and a set of teams. A user can belong to many teams and each team can have many users.",
    "split_prompt": "This is a prompt description:```json\n{\n    \"spliting prompt\": {\n        \"role\": [\n            \"database engineer\"\n        ],\n        \"response_format\": [\n            \"SQL code blocks\"\n        ],\n        \"database_type\": [\n            \"PostgreSQL 14\"\n        ],\n        \"task\": [\n            \"create database schema\"\n        ],\n        \"entities\": [\n            \"users\",\n            \"profiles\",\n            \"teams\"\n        ],\n        \"relationships\": [\n            \"many-to-many\"\n        ]\n    }\n}\n```",
    "input1": " CREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE teams (\n    team_id SERIAL PRIMARY KEY,\n    team_name VARCHAR(100) NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE user_teams (\n    user_team_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    team_id INT REFERENCES teams(team_id) ON DELETE CASCADE,\n    UNIQUE(user_id, team_id)\n);\n\n",
    "input2": " CREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    profile_picture VARCHAR(255),\n    bio TEXT,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE teams (\n    team_id SERIAL PRIMARY KEY,\n    team_name VARCHAR(100) NOT NULL,\n    description TEXT,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE user_teams (\n    user_team_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    team_id INT REFERENCES teams(team_id) ON DELETE CASCADE,\n    role VARCHAR(50),\n    UNIQUE(user_id, team_id)\n);\n```",
    "input1_ans": [
        "```sql\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE teams (\n    team_id SERIAL PRIMARY KEY,\n    team_name VARCHAR(100) NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE user_teams (\n    user_team_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    team_id INT NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,\n    FOREIGN KEY (team_id) REFERENCES teams(team_id) ON DELETE CASCADE,\n    UNIQUE(user_id, team_id)\n);\n```",
        "```sql\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE teams (\n    team_id SERIAL PRIMARY KEY,\n    team_name VARCHAR(100) NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE user_teams (\n    user_team_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    team_id INT REFERENCES teams(team_id) ON DELETE CASCADE,\n    UNIQUE(user_id, team_id)\n);\n```"
    ],
    "input2_ans": [
        "```sql\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    profile_picture VARCHAR(255),\n    bio TEXT,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE teams (\n    team_id SERIAL PRIMARY KEY,\n    team_name VARCHAR(100) NOT NULL,\n    description TEXT,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE user_teams (\n    user_team_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,\n    team_id INT NOT NULL REFERENCES teams(team_id) ON DELETE CASCADE,\n    role VARCHAR(50),\n    UNIQUE(user_id, team_id)\n);\n```",
        "```sql\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    profile_picture VARCHAR(255),\n    bio TEXT,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE teams (\n    team_id SERIAL PRIMARY KEY,\n    team_name VARCHAR(100) NOT NULL,\n    description TEXT,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE user_teams (\n    user_team_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    team_id INT REFERENCES teams(team_id) ON DELETE CASCADE,\n    role VARCHAR(50),\n    UNIQUE(user_id, team_id)\n);\n```"
    ]
}